<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Базовый блок</title>
    <style>
        table {
            border-collapse: collapse;
            border: 3px solid grey;
            width: 50%;
            text-align: center;
        }
        th, td {
            border: 1px solid grey;
            padding: 10px 15px;
        }
    </style>
</head>
<body>
<h1>Домашнее задание</h1>
<h2>Задание 1</h2>
<p>С помощью оператора echo выведите на страницу:</p>
<ul>
    <li>Целочисленную переменную</li>
    <li>Переменную дробного типа</li>
    <li>Переменную булевского типа</li>
    <li>Строковую переменную</li>
    <li>Константу</li>
</ul>

<?php
    $a = 10;
    echo $a .'</br>';
    $b = 2.2;
    echo $b .'</br>';
    $c = true;
    echo $c .'</br>';
    $d = '12232sadasdasd' ;
    echo $d .'</br>';
    define ('E', 2.7);
    echo E  .'</br>';
?>

<h2>Задание 2</h2>
<p>Повторите вывод, заключив переменные в двойные кавычки (“). Посмотрите, что
    получится. Объясните результат</p>

<?php
    $a = 10;
    echo "$a" .'</br>';
    $b = 2.2;
    echo "$b" .'</br>';
    $c = true;
    echo "$c" .'</br>';
    $d = "12232sadasdasd" ;
    echo "$d" .'</br>';
    define ( 'E', 2.7);
    echo "E"  .'</br>';
?>

<p>Если заключить имя переменной в двойные кавычки, интерпретатор подставит значение этой переменной при выводе. Вместо константы выводит строку.</p>

<h2>Задание 3</h2>
<p>Повторите вывод, заключив переменные в одинарные кавычки (‘). Посмотрите, что
    получится. Объясните результат</p>

<?php
    $a = 10;
    echo '$a' .'</br>';
    $b = 2.2;
    echo '$b' .'</br>';
    $c = true;
    echo '$c' .'</br>';
    $d = '12232sadasdasd' ;
    echo '$d' .'</br>';
    define ('E', 2.7);
    echo 'E'  .'</br>';
?>

<p>Если заключить имя переменной в одинарные кавычки, интерпретатор не подставит значение этой переменной при выводе. Вместо константы выводит строку.</p>

<h2>Задание 4</h2>
<p>Выведите на экран любое четверостишие. Пример:<br><br>
    «Славная осень! Здоровый, ядреный<br>
    Воздух усталые силы бодрит;<br>
    Лед неокрепший на речке студеной<br>
    Словно как тающий сахар лежит.»<br>
    <u>Н. А. Некрасов</u><br><br>
    Для каждой новой строки используйте отдельный оператор echo. Каждая строчка
    должна быть отдельной строковой переменной. Также необходимо использовать
    переводы строки. После четверостишия поставьте инициалы автора и сделайте их
    подчёркнутыми.</p>

<?php
    $a = "«Славная осень! Здоровый, ядреный";
    $b = "Воздух усталые силы бодрит;";
    $c = "Лед неокрепший на речке студеной";
    $d = "Словно как тающий сахар лежит.»";
    echo $a . '</br>';
    echo $b . '</br>';
    echo $c . '</br>';
    echo $d . '</br>';
    echo "<u>" . "Н. А. Некрасов" . "</u>";
?>

<h2>Задание 5</h2>
<p>Выполните эти же действия, с помощью одного оператора echo.</p>

<?php
    $a = "«Славная осень! Здоровый, ядреный";
    $b = "Воздух усталые силы бодрит;";
    $c = "Лед неокрепший на речке студеной";
    $d = "Словно как тающий сахар лежит.»";
    echo $a . '</br>' . $b . '</br>' . $c . '</br>' . $d . '</br>' . "<u>" . "Н. А. Некрасов" . "</u>";
?>

<h2>Задание 6</h2>
<p>Попробуйте в выражении использовать разные типы данных, например, сложите число
    «10» и строку «20 приветов». Что получится? Объясните результат.</p>

<?php
    $a = 10;
    $b = "20 приветов";
    echo $a + $b;
?>
<p>Операция сложения преобразует строку в число, начиная с первого символа строки. Если строка начинается не с цифр, то она принимает значение 0. Будет 30.</p>

<h2>Задание 7</h2>
<p>Дайте ответ на вопрос, как работает оператор xor? В каких случаях он возвращает
    значение true, в каких – false? Для этого напишите скрипт, который выводит значения
    операций со всеми возможными вариантами операндов (4 варианта). Чему равно $a xor
    $a для любых значений $a?</p>

<?php
    $a = true;
    $b = false;
    var_dump ($a xor $a) . '</br>';
    var_dump ($a xor $b) . '</br>';
    var_dump ($b xor $b) . '</br>';
?>

<table>
    <tr>
        <th>$a</th>
        <th>$b</th>
        <th>$a xor $b</th>
    </tr>
    <tr>
        <td>true</td>
        <td>true</td>
        <td>false</td>
    </tr>
    <tr>
        <td>true</td>
        <td>false</td>
        <td>true</td>
    </tr>
    <tr>
        <td>false</td>
        <td>true</td>
        <td>true</td>
    </tr>
    <tr>
        <td>false</td>
        <td>false</td>
        <td>false</td>
    </tr>
</table>

<h2>Задание 8</h2>
<p>Дан фрагмент кода: <br><br>

    $x = 10;<br>
    $y = 15;<br><br>

    Необходимо дописать несколько операций так, чтобы в итоге значения переменных
    поменялись местами. При этом, использовать другие переменные запрещается.</p>

<?php
    $x = 10;
    $y = 15;
    $x = $x + $y; // 25
    $y = $x - $y ; //10
    $x = $x - $y; // 15
    echo $x . '</br>' . $y;
?>

</body>
</html>










